#!/usr/bin/env python3

from gi.repository import Gtk, GLib, Gdk
import cgi
from k5dstatus.utils import get_config, make_block

config = get_config('clipboard')

clipboard_format = config.get('format', '<span size="small" font="FontAwesome">\uf0ea</span> %text')
truncate_length = config.get('truncate-length', 20)

clipboard = Gtk.Clipboard.get(Gdk.SELECTION_CLIPBOARD)


def format_clipboard_text(cb_text):
    cb_text = cgi.escape(cb_text.replace('\n', ''))

    if len(cb_text) > truncate_length:
        cb_text = cb_text[0:truncate_length].rstrip() + 'â€¦'

    cb_text = clipboard_format.replace('%text', cb_text)

    return cb_text


def on_owner_change(clipboard, event):
    cb_text = clipboard.wait_for_text()

    if not cb_text:
        # no clipboard, so clear the block
        block["full_text"] = ""
    else:
        block["full_text"] = format_clipboard_text(cb_text)

with make_block(
    name="clipboard",
    markup="pango"
) as bgen:
    block = bgen()

    on_owner_change(clipboard, None)

    clipboard.connect('owner-change', on_owner_change)

    GLib.MainLoop().run()
